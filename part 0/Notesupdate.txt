title Notesupdate

browser->server: https://studies.cs.helsinki.fi/exampleapp/notes GET
server->browser: html Document
browser->server: https://studies.cs.helsinki.fi/exampleapp/main.css GET
server->browser: CSS Document
browser->server: https://studies.cs.helsinki.fi/exampleapp/main.js GET
server->browser: Js Document
note left of browser: start run js code and run the function xhttp.open("GET", "/exampleapp/data.json", true)
browser->server: https://studies.cs.helsinki.fi/exampleapp/data.json GET 
server->browser: return JSON with an Array of objects whitin notes 
note left of browser: note ends and display notes section
browser->server: https://studies.cs.helsinki.fi/favicon.ico GET
server->browser: text/html (tag <a> with Course Stats) in Cache Code: 200



note left of browser: Add new note in input with click button save-> then use form action with method post (because the submit active that url redirected) 
browser->server: https://studies.cs.helsinki.fi/exampleapp/new_note POST   send{notename:newnote}
server->browser: return text/html; charset=utf-8 with dates about state of request and response
browser->server: https://studies.cs.helsinki.fi/exampleapp/notes GET  Again
server->browser: html Document Again
browser->server: https://studies.cs.helsinki.fi/exampleapp/main.css GET Again
server->browser: CSS Document
browser->server: https://studies.cs.helsinki.fi/exampleapp/main.js GET Again
server->browser: Js Document
note left of browser: start run js code and run the function xhttp.open("GET", "/exampleapp/data.json", true)
browser->server: https://studies.cs.helsinki.fi/exampleapp/data.json GET 
server->browser: return JSON with an Array of objects whitin notes (including new note)
note left of browser: note ends and display notes section, runs js function active with the event onreadystate
browser->server: https://studies.cs.helsinki.fi/favicon.ico GET
server->browser: text/html (tag <a> with Course Stats) in Cache Code: 200
